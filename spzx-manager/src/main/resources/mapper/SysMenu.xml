<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.manager.mapper.SysMenuMapper">

    <resultMap id="sysMenuMap" type="com.example.spzx.model.entity.system.SysMenu" autoMapping="true"></resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="columns">
      title,component,sort_value,status,create_time,update_time,is_deleted , parent_id,id
    </sql>

    <select id="selectLists" resultMap="sysMenuMap">
        select <include refid="columns" />
        from sys_menu
        where
        is_deleted = 0
        order by sort_value
    </select>

    <insert id="inserts" useGeneratedKeys="true" keyProperty="id">
        insert into sys_menu (
            id,
            parent_id,
            title,
            component,
            sort_value,
            status
        ) values (
                     #{id},
                     #{parentId},
                     #{title},
                     #{component},
                     #{sortValue},
                     #{status}
                 )
    </insert>

    <update id="updateByIds" >
        update sys_menu set
        <if test="parentId != null and parentId != ''">
            parent_id = #{parentId},
        </if>
        <if test="title != null and title != ''">
            title = #{title},
        </if>
        <if test="component != null and component != ''">
            component = #{component},
        </if>
        <if test="sortValue != null">
            sort_value = #{sortValue},
        </if>
        <if test="status != null">
            status = #{status},
        </if>
        update_time =  now()
        where
        id = #{id}
    </update>



    <select id="deletes" resultType="integer">
        select count(id)
        from sys_menu
        where
            parent_id = #{parentId}
          and is_deleted = 0
    </select>
<!--    #         使用用户id，查询出它能操作的菜单-->
<!--    #-->
<!--    # 用户角色关系表、角色菜单关系表、最后返回菜单表-->
<!--    # select distinct sm.* from sys_user_role sur-->
<!--    # inner join sys_role_menu srm on sur.role_id = srm.role_id-->
<!--    # inner join sys_menu sm on srm.menu_id=sm.id-->
<!--    # where sur.user_id = #{userId} and sm.is_deleted = 0-->
    <select id="selectListByUserId" resultType="com.example.spzx.model.entity.system.SysMenu">

SELECT DISTINCT m.* FROM sys_menu m
INNER JOIN sys_role_menu rm ON rm.menu_id = m.id
INNER JOIN sys_user_role ur ON ur.role_id = rm.role_id
WHERE ur.user_id=#{userId} and m.is_deleted = 0

    </select>

    <update id="deleteByIds">
        update sys_menu set
                            update_time = now() ,
                            is_deleted = 1
        where
            id = #{id}
    </update>






</mapper>